{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\Documents\\\\BTI - UFRN\\\\6semestre\\\\IMD0522 - JOGOS DIGITAIS COMO FERRAMENTA PEDAG\\xD3GICA\\\\qat-test\\\\qat-test\\\\src\\\\components\\\\Keyboard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useGameContext } from \"./GameContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Keyboard() {\n  _s();\n  const {\n    usedLetters,\n    currentLetters,\n    updateLetters\n  } = useGameContext();\n  const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n  const isUsed = letter => usedLetters.includes(letter);\n  const handleClick = letter => {\n    if (!isUsed(letter)) {\n      const indexToReplace = currentLetters.indexOf(\"\");\n      if (indexToReplace !== -1) {\n        updateLetters(letter, indexToReplace);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard\",\n    children: alphabet.map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `key ${isUsed(letter) ? \"used\" : \"\"}`,\n      disabled: isUsed(letter),\n      onClick: () => handleClick(letter),\n      children: letter\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Keyboard, \"+usGR5Vj7kamFHER2/QsSREjupE=\", false, function () {\n  return [useGameContext];\n});\n_c = Keyboard;\nvar _c;\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"names":["React","useGameContext","jsxDEV","_jsxDEV","Keyboard","_s","usedLetters","currentLetters","updateLetters","alphabet","split","isUsed","letter","includes","handleClick","indexToReplace","indexOf","className","children","map","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/carlo/Documents/BTI - UFRN/6semestre/IMD0522 - JOGOS DIGITAIS COMO FERRAMENTA PEDAGÃ“GICA/qat-test/qat-test/src/components/Keyboard.js"],"sourcesContent":["import React from \"react\";\r\nimport { useGameContext } from \"./GameContext\";\r\n\r\nexport function Keyboard() {\r\n  const { usedLetters, currentLetters, updateLetters } = useGameContext();\r\n\r\n  const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\r\n\r\n  const isUsed = (letter) => usedLetters.includes(letter);\r\n\r\n  const handleClick = (letter) => {\r\n    if (!isUsed(letter)) {\r\n      const indexToReplace = currentLetters.indexOf(\"\");\r\n      if (indexToReplace !== -1) {\r\n        updateLetters(letter, indexToReplace);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"keyboard\">\r\n      {alphabet.map((letter) => (\r\n        <button\r\n          key={letter}\r\n          className={`key ${isUsed(letter) ? \"used\" : \"\"}`}\r\n          disabled={isUsed(letter)}\r\n          onClick={() => handleClick(letter)}\r\n        >\r\n          {letter}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC,WAAW;IAAEC,cAAc;IAAEC;EAAc,CAAC,GAAGP,cAAc,CAAC,CAAC;EAEvE,MAAMQ,QAAQ,GAAG,4BAA4B,CAACC,KAAK,CAAC,EAAE,CAAC;EAEvD,MAAMC,MAAM,GAAIC,MAAM,IAAKN,WAAW,CAACO,QAAQ,CAACD,MAAM,CAAC;EAEvD,MAAME,WAAW,GAAIF,MAAM,IAAK;IAC9B,IAAI,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE;MACnB,MAAMG,cAAc,GAAGR,cAAc,CAACS,OAAO,CAAC,EAAE,CAAC;MACjD,IAAID,cAAc,KAAK,CAAC,CAAC,EAAE;QACzBP,aAAa,CAACI,MAAM,EAAEG,cAAc,CAAC;MACvC;IACF;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKc,SAAS,EAAC,UAAU;IAAAC,QAAA,EACtBT,QAAQ,CAACU,GAAG,CAAEP,MAAM,iBACnBT,OAAA;MAEEc,SAAS,EAAE,OAAON,MAAM,CAACC,MAAM,CAAC,GAAG,MAAM,GAAG,EAAE,EAAG;MACjDQ,QAAQ,EAAET,MAAM,CAACC,MAAM,CAAE;MACzBS,OAAO,EAAEA,CAAA,KAAMP,WAAW,CAACF,MAAM,CAAE;MAAAM,QAAA,EAElCN;IAAM,GALFA,MAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAML,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACpB,EAAA,CA9BeD,QAAQ;EAAA,QACiCH,cAAc;AAAA;AAAAyB,EAAA,GADvDtB,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}