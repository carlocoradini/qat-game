{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useGameContext}from\"../context/GameContext\";import axios from\"axios\";// URL da API Datamuse para verificar palavras\nimport{jsx as _jsx}from\"react/jsx-runtime\";const BASE_URL=\"https://api.dictionaryapi.dev/api/v2/entries/en\";export function WordChecker(){const{currentLetters,addUsedLetters}=useGameContext();const[message,setMessage]=useState(\"\");// Estado para a mensagem de erro ou sucesso\n// Função para verificar a palavra com a API Datamuse\nconst checkWordValidity=async word=>{try{const response=await axios.get(\"\".concat(BASE_URL,\"/\").concat(word));// Se a palavra existir, ela será retornada na lista\nif(response.data.length>0){addUsedLetters(currentLetters);setMessage(\"A palavra '\".concat(word,\"' \\xE9 v\\xE1lida!\"));}else{setMessage(\"Palavra inválida!\");}}catch(error){console.error(\"Erro ao verificar palavra:\",error);setMessage(\"Erro ao verificar a palavra.\");}};// Verifica a palavra sempre que currentLetters mudar\nuseEffect(()=>{const word=currentLetters.join(\"\");// Junta as letras para formar a palavra\nif(word.length===3){// Apenas tenta validar quando 3 letras estão preenchidas\ncheckWordValidity(word);// Valida a palavra automaticamente\n}},[currentLetters]);return/*#__PURE__*/_jsx(\"div\",{children:message&&/*#__PURE__*/_jsx(\"p\",{className:\"message\",children:message})});}","map":{"version":3,"names":["React","useEffect","useState","useGameContext","axios","jsx","_jsx","BASE_URL","WordChecker","currentLetters","addUsedLetters","message","setMessage","checkWordValidity","word","response","get","concat","data","length","error","console","join","children","className"],"sources":["C:/Users/carlo/Documents/BTI - UFRN/6semestre/IMD0522 - JOGOS DIGITAIS COMO FERRAMENTA PEDAGÓGICA/qat-test/qat-test/src/components/WordChecker.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useGameContext } from \"../context/GameContext\";\r\nimport axios from \"axios\";\r\n\r\n// URL da API Datamuse para verificar palavras\r\nconst BASE_URL = \"https://api.dictionaryapi.dev/api/v2/entries/en\";\r\n\r\nexport function WordChecker() {\r\n  const { currentLetters, addUsedLetters } = useGameContext();\r\n  const [message, setMessage] = useState(\"\"); // Estado para a mensagem de erro ou sucesso\r\n\r\n  // Função para verificar a palavra com a API Datamuse\r\n  const checkWordValidity = async (word) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/${word}`);\r\n\r\n      // Se a palavra existir, ela será retornada na lista\r\n      if (response.data.length > 0) {\r\n        addUsedLetters(currentLetters);\r\n        setMessage(`A palavra '${word}' é válida!`);\r\n      } else {\r\n        setMessage(\"Palavra inválida!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao verificar palavra:\", error);\r\n      setMessage(\"Erro ao verificar a palavra.\");\r\n    }\r\n  };\r\n\r\n  // Verifica a palavra sempre que currentLetters mudar\r\n  useEffect(() => {\r\n    const word = currentLetters.join(\"\"); // Junta as letras para formar a palavra\r\n    if (word.length === 3) { // Apenas tenta validar quando 3 letras estão preenchidas\r\n      checkWordValidity(word); // Valida a palavra automaticamente\r\n    }\r\n  }, [currentLetters]);\r\n\r\n  return (\r\n    <div>\r\n      {/* Exibindo a mensagem abaixo do teclado */}\r\n      {message && <p className=\"message\">{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,cAAc,KAAQ,wBAAwB,CACvD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,QAAQ,CAAG,iDAAiD,CAElE,MAAO,SAAS,CAAAC,WAAWA,CAAA,CAAG,CAC5B,KAAM,CAAEC,cAAc,CAAEC,cAAe,CAAC,CAAGP,cAAc,CAAC,CAAC,CAC3D,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAAE;AAE5C;AACA,KAAM,CAAAW,iBAAiB,CAAG,KAAO,CAAAC,IAAI,EAAK,CACxC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,IAAAC,MAAA,CAAIV,QAAQ,MAAAU,MAAA,CAAIH,IAAI,CAAE,CAAC,CAEvD;AACA,GAAIC,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAG,CAAC,CAAE,CAC5BT,cAAc,CAACD,cAAc,CAAC,CAC9BG,UAAU,eAAAK,MAAA,CAAeH,IAAI,qBAAa,CAAC,CAC7C,CAAC,IAAM,CACLF,UAAU,CAAC,mBAAmB,CAAC,CACjC,CACF,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClDR,UAAU,CAAC,8BAA8B,CAAC,CAC5C,CACF,CAAC,CAED;AACAX,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,IAAI,CAAGL,cAAc,CAACa,IAAI,CAAC,EAAE,CAAC,CAAE;AACtC,GAAIR,IAAI,CAACK,MAAM,GAAK,CAAC,CAAE,CAAE;AACvBN,iBAAiB,CAACC,IAAI,CAAC,CAAE;AAC3B,CACF,CAAC,CAAE,CAACL,cAAc,CAAC,CAAC,CAEpB,mBACEH,IAAA,QAAAiB,QAAA,CAEGZ,OAAO,eAAIL,IAAA,MAAGkB,SAAS,CAAC,SAAS,CAAAD,QAAA,CAAEZ,OAAO,CAAI,CAAC,CAC7C,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}