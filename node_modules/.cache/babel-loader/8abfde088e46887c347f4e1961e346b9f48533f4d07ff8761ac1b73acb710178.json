{"ast":null,"code":"import axios from \"axios\";\n\n// URL da API Datamuse para verificar palavras\nconst BASE_URL = \"https://api.dictionaryapi.dev/api/v2/entries/en\";\n\n// Função para verificar a palavra com a API Datamuse\nexport const checkWordValidity = async word => {\n  try {\n    const response = await axios.get(`${BASE_URL}/${word}`);\n\n    // Se a palavra existir, ela será retornada na lista\n    if (response.data && response.data.length > 0) {\n      var _wordData$phonetics$, _wordData$meanings$, _wordData$meanings$$d;\n      const wordData = response.data[0];\n      const audio = ((_wordData$phonetics$ = wordData.phonetics[0]) === null || _wordData$phonetics$ === void 0 ? void 0 : _wordData$phonetics$.audio) || null;\n      const definition = ((_wordData$meanings$ = wordData.meanings[0]) === null || _wordData$meanings$ === void 0 ? void 0 : (_wordData$meanings$$d = _wordData$meanings$.definitions[0]) === null || _wordData$meanings$$d === void 0 ? void 0 : _wordData$meanings$$d.definition) || null;\n      return {\n        isValid: true,\n        word,\n        audio,\n        definition,\n        message: `A palavra '${word}' é válida!`\n      };\n    } else {\n      return {\n        isValid: false,\n        message: \"Palavra inválida!\"\n      };\n    }\n  } catch (error) {\n    console.error(\"Erro ao verificar palavra:\", error);\n    return {\n      isValid: false,\n      message: \"Erro ao verificar a palavra.\"\n    };\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","checkWordValidity","word","response","get","data","length","_wordData$phonetics$","_wordData$meanings$","_wordData$meanings$$d","wordData","audio","phonetics","definition","meanings","definitions","isValid","message","error","console"],"sources":["C:/Users/carlo/Documents/BTI - UFRN/6semestre/IMD0522 - JOGOS DIGITAIS COMO FERRAMENTA PEDAGÓGICA/qat-test/qat-test/src/services/wordService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// URL da API Datamuse para verificar palavras\r\nconst BASE_URL = \"https://api.dictionaryapi.dev/api/v2/entries/en\";\r\n\r\n// Função para verificar a palavra com a API Datamuse\r\nexport const checkWordValidity = async (word) => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/${word}`);\r\n\r\n    // Se a palavra existir, ela será retornada na lista\r\n    if (response.data && response.data.length > 0) {\r\n      const wordData = response.data[0]\r\n      const audio = wordData.phonetics[0]?.audio || null\r\n      const definition = wordData.meanings[0]?.definitions[0]?.definition || null\r\n      return { isValid: true,word, audio, definition, message: `A palavra '${word}' é válida!` };\r\n    } else {\r\n      return { isValid: false, message: \"Palavra inválida!\" };\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Erro ao verificar palavra:\", error);\r\n    return { isValid: false, message: \"Erro ao verificar a palavra.\" };\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAG,iDAAiD;;AAElE;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,IAAI,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,QAAQ,IAAIE,IAAI,EAAE,CAAC;;IAEvD;IACA,IAAIC,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MAAA,IAAAC,oBAAA,EAAAC,mBAAA,EAAAC,qBAAA;MAC7C,MAAMC,QAAQ,GAAGP,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MACjC,MAAMM,KAAK,GAAG,EAAAJ,oBAAA,GAAAG,QAAQ,CAACE,SAAS,CAAC,CAAC,CAAC,cAAAL,oBAAA,uBAArBA,oBAAA,CAAuBI,KAAK,KAAI,IAAI;MAClD,MAAME,UAAU,GAAG,EAAAL,mBAAA,GAAAE,QAAQ,CAACI,QAAQ,CAAC,CAAC,CAAC,cAAAN,mBAAA,wBAAAC,qBAAA,GAApBD,mBAAA,CAAsBO,WAAW,CAAC,CAAC,CAAC,cAAAN,qBAAA,uBAApCA,qBAAA,CAAsCI,UAAU,KAAI,IAAI;MAC3E,OAAO;QAAEG,OAAO,EAAE,IAAI;QAACd,IAAI;QAAES,KAAK;QAAEE,UAAU;QAAEI,OAAO,EAAE,cAAcf,IAAI;MAAc,CAAC;IAC5F,CAAC,MAAM;MACL,OAAO;QAAEc,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAoB,CAAC;IACzD;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO;MAAEF,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAA+B,CAAC;EACpE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}