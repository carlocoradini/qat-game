{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\Documents\\\\BTI - UFRN\\\\6semestre\\\\IMD0522 - JOGOS DIGITAIS COMO FERRAMENTA PEDAG\\xD3GICA\\\\qat-test\\\\qat-test\\\\src\\\\components\\\\WordChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useGameContext } from \"../context/GameContext\";\nimport { checkWordValidity } from '../services/wordService';\n//sem usar mais, a validação foi pro inputfield\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function WordChecker() {\n  _s();\n  const {\n    currentLetters,\n    addUsedLetters\n  } = useGameContext();\n  const [message, setMessage] = useState(\"\"); // Estado para a mensagem de erro ou sucesso\n\n  // Verifica a palavra sempre que currentLetters mudar\n  useEffect(() => {\n    const word = currentLetters.join(\"\"); // Junta as letras para formar a palavra\n    if (word.length === 3) {\n      // Apenas tenta validar quando 3 letras estão preenchidas\n      const validateWord = async () => {\n        const {\n          isValid,\n          message\n        } = await checkWordValidity(word);\n        setMessage(message);\n        if (isValid) {\n          addUsedLetters(currentLetters);\n        }\n      };\n      validateWord();\n    }\n  }, [currentLetters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(WordChecker, \"zl15VovMIT3yMuaBoOKOycZSvPM=\", false, function () {\n  return [useGameContext];\n});\n_c = WordChecker;\nvar _c;\n$RefreshReg$(_c, \"WordChecker\");","map":{"version":3,"names":["React","useEffect","useState","useGameContext","checkWordValidity","jsxDEV","_jsxDEV","WordChecker","_s","currentLetters","addUsedLetters","message","setMessage","word","join","length","validateWord","isValid","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/carlo/Documents/BTI - UFRN/6semestre/IMD0522 - JOGOS DIGITAIS COMO FERRAMENTA PEDAGÓGICA/qat-test/qat-test/src/components/WordChecker.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useGameContext } from \"../context/GameContext\";\r\nimport { checkWordValidity } from '../services/wordService'\r\n//sem usar mais, a validação foi pro inputfield\r\nexport function WordChecker() {\r\n  const { currentLetters, addUsedLetters } = useGameContext();\r\n  const [message, setMessage] = useState(\"\"); // Estado para a mensagem de erro ou sucesso\r\n\r\n  // Verifica a palavra sempre que currentLetters mudar\r\n  useEffect(() => {\r\n    const word = currentLetters.join(\"\"); // Junta as letras para formar a palavra\r\n    if (word.length === 3) { // Apenas tenta validar quando 3 letras estão preenchidas\r\n      const validateWord = async () => {\r\n        const { isValid, message } = await checkWordValidity(word)\r\n        setMessage(message)\r\n        if(isValid){\r\n          addUsedLetters(currentLetters)\r\n        }\r\n      }\r\n      validateWord()\r\n    }\r\n  }, [currentLetters]);\r\n\r\n  return (\r\n    <div>\r\n      {/* Exibindo a mensagem abaixo do teclado */}\r\n      {message && <p className=\"message\">{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM;IAAEC,cAAc;IAAEC;EAAe,CAAC,GAAGP,cAAc,CAAC,CAAC;EAC3D,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMY,IAAI,GAAGJ,cAAc,CAACK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,IAAID,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;MAAE;MACvB,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;QAC/B,MAAM;UAAEC,OAAO;UAAEN;QAAQ,CAAC,GAAG,MAAMP,iBAAiB,CAACS,IAAI,CAAC;QAC1DD,UAAU,CAACD,OAAO,CAAC;QACnB,IAAGM,OAAO,EAAC;UACTP,cAAc,CAACD,cAAc,CAAC;QAChC;MACF,CAAC;MACDO,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACP,cAAc,CAAC,CAAC;EAEpB,oBACEH,OAAA;IAAAY,QAAA,EAEGP,OAAO,iBAAIL,OAAA;MAAGa,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAEP;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAACf,EAAA,CAzBeD,WAAW;EAAA,QACkBJ,cAAc;AAAA;AAAAqB,EAAA,GAD3CjB,WAAW;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}