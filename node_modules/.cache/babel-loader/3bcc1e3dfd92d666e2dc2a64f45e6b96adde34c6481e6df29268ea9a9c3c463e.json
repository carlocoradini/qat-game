{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\Documents\\\\BTI - UFRN\\\\6semestre\\\\IMD0522 - JOGOS DIGITAIS COMO FERRAMENTA PEDAG\\xD3GICA\\\\qat-test\\\\qat-test\\\\src\\\\components\\\\InputField.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useGameContext } from \"../context/GameContext\";\nimport { WordChecker } from \"./WordChecker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputField() {\n  _s();\n  const {\n    currentLetters,\n    updateLetters\n  } = useGameContext();\n  const [selectedIndex, setSelectedIndex] = useState(0); // Índice da letra selecionada\n\n  // Trocar a letra no índice selecionado\n  const handleLetterChange = newLetter => {\n    updateLetters(newLetter.toUpperCase(), selectedIndex);\n  };\n\n  // Define qual input está selecionado\n  const handleInputFocus = index => {\n    setSelectedIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: currentLetters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: letter,\n        maxLength: \"1\",\n        onChange: e => handleLetterChange(e.target.value),\n        onFocus: () => handleInputFocus(index),\n        className: \"letter-input\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WordChecker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(InputField, \"g/sMPnaQ3oZWjxZZ10pUx4O6Q3s=\", false, function () {\n  return [useGameContext];\n});\n_c = InputField;\nvar _c;\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["React","useState","useGameContext","WordChecker","jsxDEV","_jsxDEV","InputField","_s","currentLetters","updateLetters","selectedIndex","setSelectedIndex","handleLetterChange","newLetter","toUpperCase","handleInputFocus","index","children","className","map","letter","type","value","maxLength","onChange","e","target","onFocus","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/carlo/Documents/BTI - UFRN/6semestre/IMD0522 - JOGOS DIGITAIS COMO FERRAMENTA PEDAGÓGICA/qat-test/qat-test/src/components/InputField.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useGameContext } from \"../context/GameContext\";\r\nimport { WordChecker } from \"./WordChecker\";\r\n\r\nexport function InputField() {\r\n  const { currentLetters, updateLetters } = useGameContext();\r\n  const [selectedIndex, setSelectedIndex] = useState(0); // Índice da letra selecionada\r\n\r\n  // Trocar a letra no índice selecionado\r\n  const handleLetterChange = (newLetter) => {\r\n    updateLetters(newLetter.toUpperCase(), selectedIndex);\r\n  };\r\n\r\n  // Define qual input está selecionado\r\n  const handleInputFocus = (index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"input-field\">\r\n        {currentLetters.map((letter, index) => (\r\n          <input\r\n            key={index}\r\n            type=\"text\"\r\n            value={letter}\r\n            maxLength=\"1\"\r\n            onChange={(e) => handleLetterChange(e.target.value)}\r\n            onFocus={() => handleInputFocus(index)}\r\n            className=\"letter-input\"\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <WordChecker /> {/* Remove o validateWord e usa o contexto diretamente */}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,OAAO,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM;IAAEC,cAAc;IAAEC;EAAc,CAAC,GAAGP,cAAc,CAAC,CAAC;EAC1D,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAMW,kBAAkB,GAAIC,SAAS,IAAK;IACxCJ,aAAa,CAACI,SAAS,CAACC,WAAW,CAAC,CAAC,EAAEJ,aAAa,CAAC;EACvD,CAAC;;EAED;EACA,MAAMK,gBAAgB,GAAIC,KAAK,IAAK;IAClCL,gBAAgB,CAACK,KAAK,CAAC;EACzB,CAAC;EAED,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAKa,SAAS,EAAC,aAAa;MAAAD,QAAA,EACzBT,cAAc,CAACW,GAAG,CAAC,CAACC,MAAM,EAAEJ,KAAK,kBAChCX,OAAA;QAEEgB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEF,MAAO;QACdG,SAAS,EAAC,GAAG;QACbC,QAAQ,EAAGC,CAAC,IAAKb,kBAAkB,CAACa,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;QACpDK,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAACC,KAAK,CAAE;QACvCE,SAAS,EAAC;MAAc,GANnBF,KAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN1B,OAAA,CAACF,WAAW;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAACxB,EAAA,CAjCeD,UAAU;EAAA,QACkBJ,cAAc;AAAA;AAAA8B,EAAA,GAD1C1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}