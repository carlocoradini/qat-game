{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\Documents\\\\BTI - UFRN\\\\6semestre\\\\IMD0522 - JOGOS DIGITAIS COMO FERRAMENTA PEDAG\\xD3GICA\\\\qat-test\\\\qat-test\\\\src\\\\components\\\\InputField.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useGameContext } from \"../context/GameContext\";\nimport { WordChecker } from \"./WordChecker\";\nimport { checkWordValidity } from \"../services/wordService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputField() {\n  _s();\n  const {\n    currentLetters,\n    updateLetters,\n    addUsedLetters,\n    setWordInfo,\n    addValidWord\n  } = useGameContext();\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [inputValid, setInputValid] = useState(false);\n  const checkWord = async () => {\n    const word = currentLetters.join(\"\");\n    if (word.length === 3) {\n      const result = await checkWordValidity(word);\n      setInputValid(result.isValid);\n      if (result.isValid) {\n        addUsedLetters(currentLetters);\n        setWordInfo(result.word, result.audio, result.definition);\n        addValidWord(word);\n        // aqui atualizo o contexto com as inforamções\n      }\n    }\n  };\n\n  // Função para trocar a letra no índice selecionado\n  const handleLetterChange = newLetter => {\n    updateLetters(newLetter.toUpperCase(), selectedIndex);\n  };\n\n  // Lidar com as teclas do teclado físico\n  const handleKeyDown = e => {\n    if (e.key === \"ArrowRight\") {\n      setSelectedIndex(prev => (prev + 1) % currentLetters.length);\n    } else if (e.key === \"ArrowLeft\") {\n      setSelectedIndex(prev => (prev - 1 + currentLetters.length) % currentLetters.length);\n    } else if (/^[a-zA-Z]$/.test(e.key)) {\n      handleLetterChange(e.key);\n    }\n  };\n  useEffect(() => {\n    checkWord();\n  }, [currentLetters]);\n  useEffect(() => {\n    if (inputValid !== null) {\n      // Se já foi validado\n      const timer = setTimeout(() => {\n        setInputValid(null); // Remove a classe após 1 segundo\n      }, 1000);\n      return () => clearTimeout(timer); // Limpa o timer se o componente for desmontado ou se o inputValid mudar\n    }\n  }, [inputValid]); // Este efeito depende de `inputValid`\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [selectedIndex, currentLetters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: currentLetters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: letter,\n        maxLength: \"1\",\n        readOnly: true // Impede edição direta\n        ,\n        className: `letter-input ${index === selectedIndex ? \"selected\" : \"\"} \n            ${inputValid === true ? \"valid\" : inputValid === false ? \"invalid\" : \"\"}` // Estilo para o campo selecionado\n        ,\n        onClick: () => setSelectedIndex(index) // Clique no campo para selecioná-lo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(InputField, \"nP3u/x6ogSzzope2cN77NAl7FlE=\", false, function () {\n  return [useGameContext];\n});\n_c = InputField;\nvar _c;\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["React","useEffect","useState","useGameContext","WordChecker","checkWordValidity","jsxDEV","_jsxDEV","InputField","_s","currentLetters","updateLetters","addUsedLetters","setWordInfo","addValidWord","selectedIndex","setSelectedIndex","inputValid","setInputValid","checkWord","word","join","length","result","isValid","audio","definition","handleLetterChange","newLetter","toUpperCase","handleKeyDown","e","key","prev","test","timer","setTimeout","clearTimeout","document","addEventListener","removeEventListener","children","className","map","letter","index","type","value","maxLength","readOnly","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/carlo/Documents/BTI - UFRN/6semestre/IMD0522 - JOGOS DIGITAIS COMO FERRAMENTA PEDAGÓGICA/qat-test/qat-test/src/components/InputField.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useGameContext } from \"../context/GameContext\";\r\nimport { WordChecker } from \"./WordChecker\";\r\nimport { checkWordValidity } from \"../services/wordService\";\r\n\r\nexport function InputField() {\r\n  const { currentLetters, updateLetters, addUsedLetters, setWordInfo, addValidWord } = useGameContext();\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const [ inputValid, setInputValid ] = useState(false)\r\n\r\n  const checkWord = async () => {\r\n    const word = currentLetters.join(\"\")\r\n    if(word.length === 3){\r\n      const result = await checkWordValidity(word)\r\n      setInputValid(result.isValid)\r\n      if(result.isValid){\r\n        addUsedLetters(currentLetters)\r\n        setWordInfo(result.word, result.audio, result.definition)\r\n        addValidWord(word)\r\n        // aqui atualizo o contexto com as inforamções\r\n      }\r\n    }\r\n  }\r\n\r\n  // Função para trocar a letra no índice selecionado\r\n  const handleLetterChange = (newLetter) => {\r\n    updateLetters(newLetter.toUpperCase(), selectedIndex);\r\n  };\r\n\r\n  // Lidar com as teclas do teclado físico\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"ArrowRight\") {\r\n      setSelectedIndex((prev) => (prev + 1) % currentLetters.length);\r\n    } else if (e.key === \"ArrowLeft\") {\r\n      setSelectedIndex((prev) => (prev - 1 + currentLetters.length) % currentLetters.length);\r\n    } else if (/^[a-zA-Z]$/.test(e.key)) {\r\n      handleLetterChange(e.key);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkWord()\r\n  }, [currentLetters])\r\n\r\n  useEffect(() => {\r\n    if (inputValid !== null) { // Se já foi validado\r\n      const timer = setTimeout(() => {\r\n        setInputValid(null); // Remove a classe após 1 segundo\r\n      }, 1000);\r\n\r\n      return () => clearTimeout(timer); // Limpa o timer se o componente for desmontado ou se o inputValid mudar\r\n    }\r\n  }, [inputValid]); // Este efeito depende de `inputValid`\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [selectedIndex, currentLetters]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"input-field\">\r\n        {currentLetters.map((letter, index) => (\r\n          <input\r\n            key={index}\r\n            type=\"text\"\r\n            value={letter}\r\n            maxLength=\"1\"\r\n            readOnly // Impede edição direta\r\n            className={`letter-input ${index === selectedIndex ? \"selected\" : \"\"} \r\n            ${inputValid === true ? \"valid\" : inputValid === false ? \"invalid\" : \"\"}`} // Estilo para o campo selecionado\r\n            onClick={() => setSelectedIndex(index)} // Clique no campo para selecioná-lo\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}