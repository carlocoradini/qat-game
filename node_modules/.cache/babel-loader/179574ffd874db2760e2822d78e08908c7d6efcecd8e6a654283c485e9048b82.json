{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\Documents\\\\BTI - UFRN\\\\6semestre\\\\IMD0522 - JOGOS DIGITAIS COMO FERRAMENTA PEDAG\\xD3GICA\\\\qat-test\\\\qat-test\\\\src\\\\components\\\\InputField.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useGameContext } from \"./GameContext\";\nimport { WordChecker } from \"./WordChecker\"; // Importando o componente WordChecker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputField() {\n  _s();\n  const {\n    currentLetters,\n    setCurrentLetters,\n    addUsedLetters\n  } = useGameContext();\n\n  // Função para trocar uma letra\n  const handleChangeLetter = (index, newLetter) => {\n    const updatedLetters = [...currentLetters];\n    updatedLetters[index] = newLetter; // Atualiza a letra na posição especificada\n    setCurrentLetters(updatedLetters);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: currentLetters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: letter,\n        maxLength: \"1\",\n        onChange: e => handleChangeLetter(index, e.target.value.toUpperCase()) // Garante letras maiúsculas\n        ,\n        className: \"letter-input\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WordChecker, {\n      validateWord: addUsedLetters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(InputField, \"HxBF4aiDOGGn+PeC2YrqIIMjAVA=\", false, function () {\n  return [useGameContext];\n});\n_c = InputField;\nvar _c;\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["React","useState","useEffect","useGameContext","WordChecker","jsxDEV","_jsxDEV","InputField","_s","currentLetters","setCurrentLetters","addUsedLetters","handleChangeLetter","index","newLetter","updatedLetters","children","className","map","letter","type","value","maxLength","onChange","e","target","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","validateWord","_c","$RefreshReg$"],"sources":["C:/Users/carlo/Documents/BTI - UFRN/6semestre/IMD0522 - JOGOS DIGITAIS COMO FERRAMENTA PEDAGÓGICA/qat-test/qat-test/src/components/InputField.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useGameContext } from \"./GameContext\";\r\nimport { WordChecker } from \"./WordChecker\"; // Importando o componente WordChecker\r\n\r\nexport function InputField() {\r\n  const { currentLetters, setCurrentLetters, addUsedLetters } = useGameContext();\r\n  \r\n  // Função para trocar uma letra\r\n  const handleChangeLetter = (index, newLetter) => {\r\n    const updatedLetters = [...currentLetters];\r\n    updatedLetters[index] = newLetter; // Atualiza a letra na posição especificada\r\n    setCurrentLetters(updatedLetters);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"input-field\">\r\n        {currentLetters.map((letter, index) => (\r\n          <input\r\n            key={index}\r\n            type=\"text\"\r\n            value={letter}\r\n            maxLength=\"1\"\r\n            onChange={(e) => handleChangeLetter(index, e.target.value.toUpperCase())} // Garante letras maiúsculas\r\n            className=\"letter-input\"\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Verificando a palavra sempre que as letras mudam */}\r\n      <WordChecker validateWord={addUsedLetters} />  {/* Ou você pode passar a função diretamente */}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,WAAW,QAAQ,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,OAAO,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM;IAAEC,cAAc;IAAEC,iBAAiB;IAAEC;EAAe,CAAC,GAAGR,cAAc,CAAC,CAAC;;EAE9E;EACA,MAAMS,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;IAC/C,MAAMC,cAAc,GAAG,CAAC,GAAGN,cAAc,CAAC;IAC1CM,cAAc,CAACF,KAAK,CAAC,GAAGC,SAAS,CAAC,CAAC;IACnCJ,iBAAiB,CAACK,cAAc,CAAC;EACnC,CAAC;EAED,oBACET,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAKW,SAAS,EAAC,aAAa;MAAAD,QAAA,EACzBP,cAAc,CAACS,GAAG,CAAC,CAACC,MAAM,EAAEN,KAAK,kBAChCP,OAAA;QAEEc,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEF,MAAO;QACdG,SAAS,EAAC,GAAG;QACbC,QAAQ,EAAGC,CAAC,IAAKZ,kBAAkB,CAACC,KAAK,EAAEW,CAAC,CAACC,MAAM,CAACJ,KAAK,CAACK,WAAW,CAAC,CAAC,CAAE,CAAC;QAAA;QAC1ET,SAAS,EAAC;MAAc,GALnBJ,KAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNxB,OAAA,CAACF,WAAW;MAAC2B,YAAY,EAAEpB;IAAe;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,MAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAACtB,EAAA,CA7BeD,UAAU;EAAA,QACsCJ,cAAc;AAAA;AAAA6B,EAAA,GAD9DzB,UAAU;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}