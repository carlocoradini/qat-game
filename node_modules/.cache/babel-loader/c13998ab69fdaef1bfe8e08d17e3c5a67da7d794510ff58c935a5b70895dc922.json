{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://localhost:3001\";\nconst api = axios.create({\n  baseURL: BASE_URL\n});\nexport const getAllUsers = async () => {\n  const {\n    data\n  } = await api.get(\"/users\");\n  return data;\n};\nexport const registerUser = async (username, password) => {\n  const users = await getAllUsers();\n  const userExists = users.some(user => user.username === username);\n  if (userExists) throw new Error(\"Username já existe!\");\n  const newUser = {\n    username,\n    password,\n    gameIds: []\n  };\n  const response = await api.post(\"/users\", newUser);\n  return response.data;\n};\nexport const loginUser = async (username, password) => {\n  const {\n    data: users\n  } = await api.get(\"/users\");\n  const user = users.find(user => user.username === username);\n  if (!username) throw new Error(\"Username não encontrado\");\n  if (user.password !== password) throw new Error(\"Senha incorreta!\");\n  return user;\n};\nexport const addGame = async (userId, gameData) => {\n  const {\n    data: game\n  } = await api.post(\"/games\", gameData);\n  const {\n    data: user\n  } = await api.get(`/users/${userId}`);\n  const updatedGameIds = [...user.gameIds, game.gameId];\n  await api.patch(`/users/${userId}`, {\n    gameIds: updatedGameIds\n  });\n  return game;\n};\nexport const getUserGames = async userId => {\n  const {\n    data: user\n  } = await api.get(`/users/${userId}`);\n  const gamePromises = user.gameIds.map(id => api.get(`/games/${id}`));\n  const gameResponses = await Promise.all(gamePromises);\n  return gameResponses.map(response => response.data);\n};\nexport const getAllGames = async () => {\n  const {\n    data: games\n  } = await api.get(\"/games\");\n  return games;\n};","map":{"version":3,"names":["axios","BASE_URL","api","create","baseURL","getAllUsers","data","get","registerUser","username","password","users","userExists","some","user","Error","newUser","gameIds","response","post","loginUser","find","addGame","userId","gameData","game","updatedGameIds","gameId","patch","getUserGames","gamePromises","map","id","gameResponses","Promise","all","getAllGames","games"],"sources":["C:/Users/carlo/Documents/BTI - UFRN/6semestre/IMD0522 - JOGOS DIGITAIS COMO FERRAMENTA PEDAGÓGICA/qat-test/qat-test/src/services/api.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\nconst BASE_URL = \"http://localhost:3001\";\r\nconst api = axios.create({\r\n    baseURL: BASE_URL,\r\n})\r\n\r\nexport const getAllUsers = async () => {\r\n    const { data } = await api.get(\"/users\");\r\n    return data;\r\n}\r\n\r\nexport const registerUser = async (username, password) => {\r\n    const users = await getAllUsers();\r\n    const userExists = users.some(user => user.username === username)\r\n\r\n    if(userExists)\r\n        throw new Error(\"Username já existe!\");\r\n\r\n    const newUser = { username, password, gameIds: [] };\r\n    const response = await api.post(\"/users\", newUser)\r\n    return response.data\r\n}\r\n\r\nexport const loginUser = async (username, password) => {\r\n    const { data: users } = await api.get(\"/users\");\r\n    const user = users.find(user => user.username === username);\r\n\r\n    if(!username)\r\n        throw new Error(\"Username não encontrado\");\r\n\r\n    if(user.password !== password)\r\n        throw new Error(\"Senha incorreta!\")\r\n\r\n    return user\r\n}\r\n\r\nexport const addGame = async (userId, gameData) => {\r\n    const { data: game } = await api.post(\"/games\", gameData);\r\n\r\n    const { data: user } = await api.get(`/users/${userId}`);\r\n    const updatedGameIds = [...user.gameIds, game.gameId];\r\n\r\n    await api.patch(`/users/${userId}`, {\r\n        gameIds: updatedGameIds,\r\n    })\r\n\r\n    return game;\r\n}\r\n\r\nexport const getUserGames = async (userId) => {\r\n    const { data: user } = await api.get(`/users/${userId}`)\r\n    const gamePromises = user.gameIds.map(id => api.get(`/games/${id}`))\r\n    const gameResponses = await Promise.all(gamePromises)\r\n    return gameResponses.map(response => response.data)\r\n}\r\n\r\nexport const getAllGames = async () => {\r\n    const { data: games } = await api.get(\"/games\")\r\n    return games;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}